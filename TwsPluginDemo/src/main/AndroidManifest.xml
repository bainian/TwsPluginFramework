<?xml version="1.0" encoding="utf-8"?><!-- 这里配置sharedUserId的作用，是为了告诉宿主程序，这个插件需要依赖宿主程序的class和资源
如果不配置这个参数，表示这个插件是一个独立插件，即本身可以独立安装运行 -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.plugindemo"
    android:sharedUserId="com.rick.tws.pluginhost"
    android:versionCode="2"
    android:versionName="2.0.1">

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="22" />

    <application
        android:name=".PluginTestApplication"
        android:label="@string/app_name"
        android:theme="@android:style/Theme.Holo.Light">

        <!-- uses-library作用是用来通知插件框架此插件依赖哪些其他插件 -->
        <!-- <uses-library
            android:name="com.example.pluginbase"
            android:required="true" /> -->

        <!-- 测试插件Meta-Data -->
        <meta-data
            android:name="abcdef"
            android:value="654321" />

        <!-- 分隔符： # 分割DisplayConfig； @ 分割DisplayConfig的属性； = 属性赋值； / 分割属性值 -->
        <!-- pos - 显示位置(由宿主和插件协定统一就行，包括四个属性gemelx、gemely、x、y)： 【Y:0 POS_Y_HOTSEAT； 1 POS_Y_HOME_FRAGEMENT； 2 POS_Y_ACTION_BAR； 4 其他[APPLICATION SERVICE等没不需要放置显示入口]】【X:...】 -->
        <!-- icon - 图标资源：统一使用 模块名_[hotseat or watch_fragment or menu]_描述信息.png 配置在AndroidManifest.xml不需要带后缀。 【normal/focus/press/...】 -->
        <!-- title - 标题：中文/英文 也可以只配置一个 -->
        <!-- actionid - DisplayItem的交互动作行为：如果是fragment 直接配置name,其他的配置类全名信息 -->
        <!-- type - 交互动作行为@see DisplayItem.java：0 APPLICATION;1 BROADCAST； 2 ACTIVITY； 3 FRAGMENT； 4 SERVICE； 5 PROVIDER；6 VIEW -->
        <!-- 插件启动时机： 1 手动触发 2 随DM启动 3 配对成功后 -->
        <!-- statistic - 统计上报key：string类型 -->
        <!-- extras - 附加信息：比如：插件依赖 1 已安装的app 2 已安装的插件 -->
        <plugin-display android:value="y=0@x=3@title=示例Fragment/demoFragement/HK繁體碎片/TW繁體碎片@type=3@actionid=some_id_for_fragment2@icon=demo_hotseat_default/demo_hotseat_pressed" />
        <!--actionbar gemel Item 在宿主中定义好了 Y=2是actionbar ，actionbar的X位置定义：POS_X_ACTION_BAR_L = -1;POS_X_ACTION_BAR_TITLE = 0;POS_X_ACTION_BAR_SUBTITLE = 1;POS_X_ACTION_BAR_R = 2;POS_X_ACTION_BAR_MENU = 3;-->
        <plugin-display android:value="gemely=0@gemelx=3@x=0@y=2@title=实例/Demo/實例" />
        <plugin-display android:value="gemely=0@gemelx=3@x=2@y=2@type=2@actionid=com.example.plugindemo.activity.LauncherActivity@icon=demo_rbar_nomal/demo_rbar_pressed" />

        <plugin-display android:value="y=1@x=5@type=2@title=示例Activity/demoActivity/繁體Activity@actionid=com.example.plugindemo.activity.LauncherActivity@icon=demo_watch_fragment_des" />


        <!-- 通知插件框架哪些fragment是可以嵌入宿主Activity的，如果fragment只是插件内使用，无需对外暴露则无需配置 -->
        <exported-fragment
            android:name="some_id_for_fragment1"
            android:value="com.example.plugindemo.fragment.PluginNormalFragment" />
        <!-- 通知插件框架哪些fragment是可以嵌入宿主Activity的，如果fragment只是插件内使用，无需对外暴露则无需配置 -->
        <exported-fragment
            android:name="some_id_for_fragment2"
            android:value="com.example.plugindemo.fragment.PluginSpecFragment" />

        <!-- 通知插件框架本插件向外提供的业务服务接口 android:value为实现,android:label为接口 -->
        <!-- <exported-service
            android:name="login_service"
            android:label="com.example.pluginbase.ILoginService"
            android:value="com.example.plugindemo.PluginLoginService" /> -->
        <!-- 如果服务需要支持跨进程调用，例如被宿主进程调用，则需要配置android:label为服务所实现的接口className -->
        <exported-service
            android:name="share_service"
            android:label="com.rick.tws.share.ShareService"
            android:value="com.example.plugindemo.PluginSharedService" />

        <activity
            android:name=".activity.LauncherActivity"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.plugindemo.activity.PluginTestActivity"
            android:screenOrientation="landscape">
            <intent-filter>
                <action android:name="test.abc" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.plugindemo.activity.PluginFragmentTestActivity"
            android:windowSoftInputMode="stateAlwaysVisible">
            <intent-filter>
                <action android:name="test.def" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.plugindemo.activity.PluginNotInManifestActivity"
            android:hardwareAccelerated="true"
            android:immersive="true"
            android:launchMode="singleTop"
            android:uiOptions="splitActionBarWhenNarrow">
            <intent-filter>
                <action android:name="test.xyz1" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="testhost"
                    android:scheme="testscheme" />
            </intent-filter>
        </activity>
        <activity android:name="com.example.plugindemo.activity.PluginForOppoAndVivoActivity">
            <intent-filter>
                <action android:name="test.ijk" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name="com.example.plugindemo.activity.PluginTestOpenPluginActivity">
            <intent-filter>
                <action android:name="test.zxc" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name="com.example.plugindemo.activity.PluginCoreSamples">
            <intent-filter>
                <action android:name="test.coresamples" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name="com.example.plugindemo.activity.PluginWebViewActivity">
            <intent-filter>
                <action android:name="test.webXX" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity android:name="com.example.plugindemo.activity.PluginForDialogActivity">
            <intent-filter>
                <action android:name="test.dialogXX" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.example.plugindemo.activity.PluginSingleTaskActivity"
            android:launchMode="singleTask" />
        <activity
            android:name="com.example.plugindemo.activity.TransparentActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service android:name="com.example.plugindemo.service.PluginTestService">
            <intent-filter>
                <action android:name="test.lmn" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>
        <service
            android:name="com.example.plugindemo.service.PluginTestService2"
            android:process=":plugin">
            <intent-filter>
                <action android:name="test.lmn2" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

        <receiver android:name="com.example.plugindemo.receiver.PluginTestReceiver">
            <intent-filter>
                <action android:name="test.rst" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="test.rst2" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver android:name="com.example.plugindemo.receiver.PluginTestReceiver2">
            <intent-filter>
                <action android:name="test.rst2" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.example.plugindemo.provider.PluginContentProvider"
            android:authorities="com.example.plugindemo.provider"
            android:exported="true" />
    </application>

</manifest>